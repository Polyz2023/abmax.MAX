import{_ as e,c as t,o as f,e as a}from"./index-DzwqoDST.js";const d={data(){return{}},methods:{}},n=a(`<div class="main-alert" data-v-9f8e1fbf><div class="ad" data-v-9f8e1fbf><div class="d-flex justify-content-center align-items-center st-img" data-v-9f8e1fbf><div data-v-9f8e1fbf><h1 class="TXT" data-v-9f8e1fbf>Lern Workonreader </h1><div class="d-flex justify-content-center" data-v-9f8e1fbf><i class="TXT" data-v-9f8e1fbf> Index.js file</i></div></div></div><div data-v-9f8e1fbf><div data-v-9f8e1fbf><div data-v-9f8e1fbf><ul class="alert what d-flex align-items-center justify-content-center" data-v-9f8e1fbf><div data-v-9f8e1fbf><div class="d-flex justify-content-center" data-v-9f8e1fbf><h2 data-v-9f8e1fbf>Index.js file</h2></div><hr data-v-9f8e1fbf><div class="d-flex justify-content-center" data-v-9f8e1fbf><div style="font-size:17px;text-align:center;" data-v-9f8e1fbf><strong data-v-9f8e1fbf> Use the workonreader for node js </strong><p data-v-9f8e1fbf>Let&#39;s start using our library already!</p><p data-v-9f8e1fbf>To begin with, we import it -&gt; const wr = require(&#39;workonreader&#39;)</p><p data-v-9f8e1fbf>Next, get the func to Variable -&gt; const Promise = wr.workonread(&#39;data.workon&#39;)</p><p data-v-9f8e1fbf>And now. we writing this-&gt; <pre data-v-9f8e1fbf>                          <code data-v-9f8e1fbf>
                            Promise
                                        .then(result =&gt; {
                                            console.log(result); 
                                        })
                                        .catch(error =&gt; {
                                            console.error(error.message); 
                                        });
                          </code>
                        </pre></p><p data-v-9f8e1fbf>And after running the program with the <u data-v-9f8e1fbf>node index</u> command, we get the json that is converted from our data file. </p><p data-v-9f8e1fbf>If you want write file to .workon from json, write this: <pre data-v-9f8e1fbf><code data-v-9f8e1fbf>wr.workonWrite(&#39;data.workon&#39;, {&#39;jsondata&#39;:&quot;data&quot;})</code></pre></p></div></div></div></ul></div></div></div><div data-v-9f8e1fbf><div data-v-9f8e1fbf><div class="d-flex justify-content-center" data-v-9f8e1fbf><ul class="alert what2 d-flex align-items-center justify-content-center" data-v-9f8e1fbf><div data-v-9f8e1fbf><div class="d-flex justify-content-center" data-v-9f8e1fbf><a href="#" class="btn btn-success" data-v-9f8e1fbf>Next lesson</a></div></div></ul></div></div></div></div></div>`,1),r=[n];function s(i,o,v,c,l,b){return f(),t("main",null,r)}const p=e(d,[["render",s],["__scopeId","data-v-9f8e1fbf"]]);export{p as default};
