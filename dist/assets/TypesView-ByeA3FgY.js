import{_ as a,c as t,o as e,e as s}from"./index-0lLINSBv.js";const d={data(){return{}},methods:{}},i=s('<div class="main-alert" data-v-380b30ea><div class="ad" data-v-380b30ea><div class="d-flex justify-content-center align-items-center st-img" data-v-380b30ea><div data-v-380b30ea><h1 class="TXT" data-v-380b30ea>Lern Workonreader </h1><div class="d-flex justify-content-center" data-v-380b30ea><i class="TXT" data-v-380b30ea> Types</i></div></div></div><div data-v-380b30ea><div data-v-380b30ea><div data-v-380b30ea><ul class="alert what d-flex align-items-center justify-content-center" data-v-380b30ea><div data-v-380b30ea><div class="d-flex justify-content-center" data-v-380b30ea><h2 data-v-380b30ea>Types</h2></div><hr data-v-380b30ea><div class="d-flex justify-content-center" data-v-380b30ea><div style="font-size:17px;" data-v-380b30ea><strong data-v-380b30ea> All types </strong><p data-v-380b30ea>And so, let&#39;s remember the acquaintance with the library itself and .workon files</p><p data-v-380b30ea> As you know, workon is a strongly typed json. So, this means that there is strict typing, where each variable must specify its type. </p><p data-v-380b30ea>An example of these types are: int64 (123), float (4.25), string (&#39; text &#39;), bool (true/false), list . A list is a special type that contains several types of data, elements </p><p data-v-380b30ea>Example: </p><div class="code-block" data-v-380b30ea> [-start- <br data-v-380b30ea> {mynum: int64} -&gt; 789 ;<br data-v-380b30ea> {mystring: string} -&gt; &#39; text &#39;;<br data-v-380b30ea> {mybool: bool} -&gt; true ;<br data-v-380b30ea> {myfloat: float} -&gt; 5.2 ;<br data-v-380b30ea> {mylist: list} -&gt; [&quot;el&quot;, 14, true, 5.2]<br data-v-380b30ea> -end-] </div></div></div></div></ul></div></div></div><div data-v-380b30ea><div data-v-380b30ea><div class="d-flex justify-content-center" data-v-380b30ea><ul class="alert what2 d-flex align-items-center justify-content-center" data-v-380b30ea><div data-v-380b30ea><div class="d-flex justify-content-center" data-v-380b30ea><a href="/root/modules/2024max/js/workonreader/1.2.0/offline/index" class="btn btn-success" data-v-380b30ea>Next lesson</a></div></div></ul></div></div></div></div></div>',1),n=[i];function v(l,o,r,c,b,f){return e(),t("main",null,n)}const u=a(d,[["render",v],["__scopeId","data-v-380b30ea"]]);export{u as default};
